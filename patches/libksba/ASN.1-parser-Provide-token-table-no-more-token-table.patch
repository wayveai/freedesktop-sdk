From f3b7dd4167779f2694e932ad7c2adba98ff9a21d Mon Sep 17 00:00:00 2001
From: NIIBE Yutaka <gniibe@fsij.org>
Date: Wed, 13 Oct 2021 16:49:03 +0900
Subject: [PATCH] ASN.1 parser: Provide token table (no more %token-table).

* src/asn1-parse.y (%token-table): Remove.
(token_table): New.
(yylex): Use token_table.

--

GnuPG-bug-id: 5616
Signed-off-by: NIIBE Yutaka <gniibe@fsij.org>
---
 src/asn1-parse.y | 65 +++++++++++++++++++++++++++++++++++++++---------
 1 file changed, 53 insertions(+), 12 deletions(-)

diff --git a/src/asn1-parse.y b/src/asn1-parse.y
index 5bff15c..5689500 100755
--- a/src/asn1-parse.y
+++ b/src/asn1-parse.y
@@ -66,9 +66,6 @@
 /* #define YYDEBUG 1 */
 #define MAX_STRING_LENGTH 129
 
-/* Dummy print so that yytoknum will be defined.  */
-#define YYPRINT(F, N, L)  do { } while (0);
-
 
 /* constants used in the grammar */
 enum {
@@ -115,8 +112,6 @@ static int yylex (YYSTYPE *lvalp, void *parm);
 static void yyerror (void *parm, const char *s);
 %}
 
-%token-table
-
 %token ASSIG           "::="
 %token <str> NUM
 %token <str> IDENTIFIER
@@ -764,6 +759,56 @@ definitions: definitions_id
 %%
 
 
+struct token_table_s {
+  const char *word;
+  int token;
+};
+
+static struct token_table_s token_table[] = {
+  { "::=",             ASSIG           },
+  { "ANY",             ANY             },
+  { "APPLICATION",     APPLICATION     },
+  { "BEGIN",           ksba_BEGIN      },
+  { "BIT",             BIT             },
+  { "BMPString",       BMPSTRING       },
+  { "BOOLEAN",         ksba_BOOLEAN    },
+  { "BY",              BY              },
+  { "CHOICE",          CHOICE          },
+  { "DEFAULT",         DEFAULT         },
+  { "DEFINED",         DEFINED         },
+  { "DEFINITIONS",     DEFINITIONS     },
+  { "END",             ksba_END        },
+  { "ENUMERATED",      ENUMERATED      },
+  { "EXPLICIT",        EXPLICIT        },
+  { "FALSE",           ksba_FALSE      },
+  { "FROM",            FROM            },
+  { "GeneralizedTime", GeneralizedTime },
+  { "IA5String",       IA5STRING       },
+  { "IDENTIFIER",      STR_IDENTIFIER  },
+  { "IMPLICIT",        IMPLICIT        },
+  { "IMPORTS",         IMPORTS         },
+  { "INTEGER",         INTEGER         },
+  { "NULL",            TOKEN_NULL      },
+  { "NumericString",   NUMERICSTRING   },
+  { "OBJECT",          OBJECT          },
+  { "OCTET",           OCTET           },
+  { "OF",              OF              },
+  { "OPTIONAL",        OPTIONAL        },
+  { "PRIVATE",         PRIVATE         },
+  { "PrintableString", PRINTABLESTRING },
+  { "SEQUENCE",        SEQUENCE        },
+  { "SET",             SET             },
+  { "SIZE",            SIZE            },
+  { "STRING",          STRING          },
+  { "TAGS",            TAGS            },
+  { "TRUE",            ksba_TRUE       },
+  { "TeletexString",   TELETEXSTRING   },
+  { "UNIVERSAL",       UNIVERSAL       },
+  { "UTCTime",         UTCTime         },
+  { "UTF8String",      UTF8STRING      },
+  { "UniversalString", UNIVERSALSTRING },
+};
+
 /*************************************************************/
 /*  Function: yylex                                          */
 /*  Description: looks for tokens in file_asn1 pointer file. */
@@ -775,7 +820,6 @@ yylex (YYSTYPE *lvalp, void *parm)
 {
   int c,counter=0,k;
   char string[MAX_STRING_LENGTH];
-  size_t len;
   FILE *fp = PARSECTL->fp;
 
   if (!PARSECTL->lineno)
@@ -852,13 +896,10 @@ yylex (YYSTYPE *lvalp, void *parm)
         }
 
       /* Is STRING a keyword? */
-      len = strlen (string);
-      for (k = 0; k < YYNTOKENS; k++)
+      for (k = 0; k < DIM (token_table); k++)
         {
-          if (yytname[k] && yytname[k][0] == '\"'
-              && !strncmp (yytname[k] + 1, string, len)
-              && yytname[k][len + 1] == '\"' && !yytname[k][len + 2])
-            return yytoknum[k];
+          if (!strcmp (token_table[k].word, string))
+            return token_table[k].token;
         }
 
       /* STRING is an IDENTIFIER */
-- 
2.36.1

