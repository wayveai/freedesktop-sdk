From fec1e323171ac06816563b2a52680bcbdbf1f4ca Mon Sep 17 00:00:00 2001
From: Green Wan <green.wan@sifive.com>
Date: Thu, 4 Feb 2021 05:23:51 -0800
Subject: [PATCH 3/3] lib: utils: reset: add powor off support

Based on DT 'gpio-poweroff' and GPIO driver to enable poweroff.

The patch also needs uboot DT node support

gpio-poweroff {
	compatible = "gpio-poweroff";
	gpios = <&gpio 2 GPIO_ACTIVE_LOW>;
};

Signed-off-by: Green Wan <green.wan@sifive.com>
---
 lib/utils/reset/fdt_reset_sifive.c | 54 +++++++++++++++++++++++-------
 1 file changed, 41 insertions(+), 13 deletions(-)

diff --git a/lib/utils/reset/fdt_reset_sifive.c b/lib/utils/reset/fdt_reset_sifive.c
index 38b520c..50d34dd 100644
--- a/lib/utils/reset/fdt_reset_sifive.c
+++ b/lib/utils/reset/fdt_reset_sifive.c
@@ -7,32 +7,60 @@
  *   Anup Patel <anup.patel@wdc.com>
  */
 
+#include <sbi/sbi_console.h>
+#include <sbi/sbi_platform.h>
 #include <sbi/sbi_scratch.h>
 #include <sbi_utils/fdt/fdt_helper.h>
 #include <sbi_utils/reset/fdt_reset.h>
-#include <sbi_utils/sys/sifive_test.h>
+#include <sbi_utils/gpio/fdt_gpio.h>
 
-static int sifive_test_reset_init(void *fdt, int nodeoff,
-				  const struct fdt_match *match)
+struct poweroff_gpio pwroff = {
+	.act_delay = 100,
+	.gpio = -1,
+	.output_type = GPIO_ACTIVE_LOW,
+};
+
+static int sifive_reset_init(void *fdt, int nodeoff,
+			     const struct fdt_match *match)
 {
 	int rc;
-	unsigned long addr;
 
-	rc = fdt_get_node_addr_size(fdt, nodeoff, &addr, NULL);
+	rc = fdt_parse_gpio_pwroff(fdt, &pwroff, "/gpio-poweroff");
 	if (rc)
-		return rc;
+		sbi_printf("Warning: no gpio-poweroff definition in DT\n");
+
+	return rc;
+}
+
+static void sifive_system_reset(u32 type, u32 reason)
+{
+	if (type == SBI_SRST_RESET_TYPE_SHUTDOWN) {
+		if (pwroff.gpio < 0)
+			return;
+
+		gpio_direction_output(pwroff.gpio, 0);
+
+		/* TODO:
+		 * hold active if 'active-delay-ms' is in DT
+		 */
+
+		/* if success, power is off now. */
+		while (1)
+			wfi();
+	} else {
+		/* For now nothing to do. */
+	}
 
-	return sifive_test_init(addr);
+	return;
 }
 
-static const struct fdt_match sifive_test_reset_match[] = {
-	{ .compatible = "sifive,test1" },
+static const struct fdt_match sifive_reset_match[] = {
+	{ .compatible = "gpio-poweroff" },
 	{ },
 };
 
 struct fdt_reset fdt_reset_sifive = {
-	.match_table = sifive_test_reset_match,
-	.init = sifive_test_reset_init,
-	.system_reset_check = sifive_test_system_reset_check,
-	.system_reset = sifive_test_system_reset
+	.match_table = sifive_reset_match,
+	.init = sifive_reset_init,
+	.system_reset = sifive_system_reset
 };
-- 
2.30.2

